/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.0
 * Generated at: 2024-11-05 08:44:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.View;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.ArrayList;
import loaiMODEL.loai;

public final class GioHang_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("loaiMODEL.loai");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Nav.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-sm-2\">\r\n");
      out.write("                ");

                    // Lấy thuộc tính listTenLoai từ request
                    ArrayList<loai> listTenLoai = (ArrayList<loai>) request.getAttribute("listTenLoai");
                    if (listTenLoai != null) {
                        // Duyệt qua danh sách và hiển thị các phần tử
                        for (loai l : listTenLoai) {
                
      out.write("\r\n");
      out.write("                            <a href=\"GioHangController?action=sachTheoLoai&maLoai=");
      out.print(l.getMaLoai());
      out.write('"');
      out.write('>');
      out.print( l.getTenLoai() );
      out.write("</a>\r\n");
      out.write("                            <hr>\r\n");
      out.write("                ");

                        }
                    } else {
                
      out.write("\r\n");
      out.write("                        <p>Không có dữ liệu để hiển thị</p>\r\n");
      out.write("                ");

                    }
                
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!--  -->\r\n");
      out.write("			<div class=\"col-sm-8\" style=\"background-color: pink;\">\r\n");
      out.write("				<table class=\"table table-hover\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<td><input type=\"checkbox\" id=\"select-all\" onclick=\"toggleCheckboxes(this)\"\"></td>\r\n");
      out.write("						<td>Sản phẩm</td>\r\n");
      out.write("						<td>Số lượng</td>\r\n");
      out.write("						<td>Số lượng</td>\r\n");
      out.write("						<td>Đơn Giá</td>\r\n");
      out.write("						<td>Thành tiền</td>\r\n");
      out.write("						<td>Thao tác</td>\r\n");
      out.write("					</thead>\r\n");
      out.write("\r\n");
      out.write("					<tbody>\r\n");
      out.write("						<c:forEach var=\"h\" items=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gh.ds}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td><input type=\"checkbox\" class=\"item-checkbox\"></td>\r\n");
      out.write("								<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${h.getTensach()}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("								<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${h.gia}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("								<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${h.soLuong}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("								<td>\r\n");
      out.write("									<form action=\"GioHangController?actsion=\\\"sua\\\"&soLuong=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${h.getSoLuong() }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" method=\"post\">\r\n");
      out.write("										<input type=\"number\" name=\"soLuong\" style=\"width: 50px\">\r\n");
      out.write("										<input type=\"submit\" name=\"but1\" value=\"Sửa\" class=\"btn-primary\">\r\n");
      out.write("									</form>\r\n");
      out.write("								</td>\r\n");
      out.write("								<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${h.getThanhTien()}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("								<td><a href=\"GioHangController?action=\\\"xoa\\\"\">Xoa</a></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</c:forEach>\r\n");
      out.write("					</tbody>\r\n");
      out.write("\r\n");
      out.write("					<tfoot>\r\n");
      out.write("						<td colspan=\"5\" style=\"text-align: right\">Tổng cộng:</td>\r\n");
      out.write("						<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gh.tong}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("						<td><input type=\"submit\" value=\"Xoá đã chọn\"></td>\r\n");
      out.write("						<td><a href=\"GioHangController?action=\\\"XacNhanDatMua\\\"\">Xác\r\n");
      out.write("								nhận đặt mua</a></td>\r\n");
      out.write("					</tfoot>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!--  -->\r\n");
      out.write("			<div class=\"col-sm-2\" style=\"background-color: rgb(170, 71, 87);\">\r\n");
      out.write("				<form action=\"GioHangController?action=timSach\" method=\"post\">\r\n");
      out.write("					<input type=\"text\" name=\"sachCanTim\" placeholder=\"Tìm kiếm\">\r\n");
      out.write("					<input type=\"submit\" value=\"Tìm\">\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function toggleCheckboxes(source) {\r\n");
      out.write("		var checkboxes = document.querySelectorAll('.item-checkbox');\r\n");
      out.write("		for (var i = 0; i < checkboxes.length; i++) {\r\n");
      out.write("			checkboxes[i].checked = source.checked;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
